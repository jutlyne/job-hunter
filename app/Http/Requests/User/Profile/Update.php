<?php

namespace App\Http\Requests\User\Profile;

use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rule;

class Update extends FormRequest
{
    public function authorize()
    {
        return true;
    }

    public function rules()
    {
        return [
            'avatar' => [
                'nullable',
                'image',
                'mimes:jpeg,png,jpg,gif,svg',
                'max:5120',
            ],
            'name' => [
                'nullable',
            ],
            'phone' => [
                'nullable',
                'starts_with:0',
                'digits:10',
                Rule::unique('users', 'phone')->whereNotNull('phone_verified_at')
            ],
            'email' => [
                'nullable',
                'email:rfc',
                'unique:users,email,'. auth('user')->id()
            ],
            'address' => [
                'nullable',
            ],
            'province_id' => [
                'nullable',
            ],
            'district_id' => [
                'nullable',
            ],
            'old_password' => [
                'nullable',
                'required_with:password',
                function ($attribute, $value, $fail) {
                    if (!Hash::check($value, auth('user')->user()->password)) {
                        return $fail(__('Mật khẩu cũ không chính xác.'));
                    }
                },
            ],
            'password' => [
                'nullable',
                'required_with:old_password',
                'confirmed',
                'min:6',
            ],
        ];
    }

    /**
     * Prepare the data for validation.
     *
     * @return void
     */
    protected function prepareForValidation()
    {
        if(isset($this->name) && $this->name != null)
        {
            $this->merge([
                'name' => preg_replace( "/\s+/", " ", $this->name),
            ]);
        }

        if(isset($this->address) && $this->address != null)
        {
            $this->merge([
                'address' => preg_replace( "/\s+/", " ", $this->address),
            ]);
        }
    }
    
    protected function failedValidation(Validator $validator)
    {
        parent::failedValidation($validator); // TODO: Change the autogenerated stub
    }
}
